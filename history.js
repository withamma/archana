// Generated by CoffeeScript 1.8.0
var History;

History = (function() {
  function History(storage, state, historyExpiration) {
    var id;
    this.storage = storage;
    this.state = state;
    this.historyExpiration = historyExpiration;
    id = this.state.itemId;
    this.getHistoryData = function() {
      return this.storage[this.state.itemId].historyData;
    };
    this.clear = function() {
      storage.historyReset = (new Date).getTime();
      if (storage[id] == null) {
        storage[id] = {};
      }
      return storage[id].historyData = {
        historyLength: 0,
        maxHistoryLength: 15,
        history: {}
      };
    };
    if ((storage[id] == null) || (storage[id].historyData == null) || (storage.historyReset == null) || storage.historyReset < this.historyExpiration) {
      this.clear();
    }
  }

  History.prototype.add = function(listOfIncorrect) {
    var historyData, i, j, _i, _j, _len, _len1, _ref, _results;
    historyData = this.getHistoryData();
    historyData.historyLength += 1;
    for (_i = 0, _len = listOfIncorrect.length; _i < _len; _i++) {
      i = listOfIncorrect[_i];
      if (historyData.history[i] == null) {
        historyData.history[i] = 0;
      }
      historyData.history[i] += 1;
    }
    if (historyData.historyLength >= historyData.maxHistoryLength) {
      historyData.historyLength -= 1;
    }
    _ref = historyData.history;
    _results = [];
    for (j = _j = 0, _len1 = _ref.length; _j < _len1; j = ++_j) {
      i = _ref[j];
      if (j > 0) {
        _results.push(historyData.history[i] -= 1);
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  History.prototype.colors = function() {
    var cssColor, historyData, i, wrong, _ref;
    historyData = this.getHistoryData();
    cssColor = {};
    if (historyData.historyLength > 0) {
      _ref = historyData.history;
      for (i in _ref) {
        wrong = _ref[i];
        cssColor[i] = "hsla(" + (116 * (1 - (wrong / historyData.historyLength))) + ", 100%, 45%, .4)";
      }
    }
    return cssColor;
  };

  return History;

})();
